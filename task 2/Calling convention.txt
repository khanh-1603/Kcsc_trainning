Hầu hết hàm ở Win32 API sử dụng calling convention (giao thức gọi hàm) stdcall. MessageBox và ExitProcess cũng không ngoại lệ.

stdcall:

Cú pháp: return-type __stdcall function-name[( argument-list )]

Khi sử dụng stdcall, hàm gọi(caller) sẽ push giá trị của các đối số vào stack. Hàm được gọi (callee) pop các tham số của nó trên stack
theo thứ tự từ phải sang trái do stack hoạt động theo cơ chế LIFO.


Khi debug code bằng ida: 
main push đầy đủ các đối vào stack tổng cộng là 4 dòng (4x4=16 bit). Khi gọi MessageBoxA stack nhảy thêm 1 dòng đẻ lưu địa chỉ của
dòng phía dưới lệnh call. 

Khi đi qua call MessageBoxA, stack nhảy lên 5 dòng = 20 bit. Các đối số vẫn ở trong stack. Vậy là MessageBoxA đã pop rồi push lại các
đối số đó. Thanh ghi eax, ecx, edx, eip, esp thay đổi giá trị.


Tổng kết:
- Caller push lần lượt các đối số lên stack, cuối cùng push địa chỉ dòng lệnh phía dưới lên stack và jump đến callee. Callee pop các đối
số đó để làm tham số. Sau khi return, nó trả về giá trị tại eax đồng thời push lại các đối số. Callee jump trở lại caller bằng lệnh ret.
Vị trí jump là địa chỉ được lưu trước đó.